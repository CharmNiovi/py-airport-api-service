openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /accounts/profile/:
    get:
      operationId: accounts_profile_retrieve
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: accounts_profile_update
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: accounts_profile_partial_update
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /accounts/register/:
    post:
      operationId: accounts_register_create
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /accounts/token/:
    post:
      operationId: accounts_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /accounts/token/refresh/:
    post:
      operationId: accounts_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /accounts/token/verify/:
    post:
      operationId: accounts_token_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
  /airplane/:
    get:
      operationId: airplane_list
      tags:
      - airplane
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AirplaneList'
          description: ''
    post:
      operationId: airplane_create
      tags:
      - airplane
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Airplane'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Airplane'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Airplane'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Airplane'
          description: ''
  /airplane-type/:
    get:
      operationId: airplane_type_list
      tags:
      - airplane-type
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AirplaneType'
          description: ''
    post:
      operationId: airplane_type_create
      tags:
      - airplane-type
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AirplaneType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AirplaneType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AirplaneType'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AirplaneType'
          description: ''
  /airplane-type/{id}/:
    get:
      operationId: airplane_type_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this airplane type.
        required: true
      tags:
      - airplane-type
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AirplaneTypeDetail'
          description: ''
    put:
      operationId: airplane_type_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this airplane type.
        required: true
      tags:
      - airplane-type
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AirplaneType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AirplaneType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AirplaneType'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AirplaneType'
          description: ''
    patch:
      operationId: airplane_type_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this airplane type.
        required: true
      tags:
      - airplane-type
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAirplaneType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAirplaneType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAirplaneType'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AirplaneType'
          description: ''
    delete:
      operationId: airplane_type_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this airplane type.
        required: true
      tags:
      - airplane-type
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /airplane/{id}/:
    get:
      operationId: airplane_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this airplane.
        required: true
      tags:
      - airplane
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AirplaneRetrieve'
          description: ''
    put:
      operationId: airplane_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this airplane.
        required: true
      tags:
      - airplane
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Airplane'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Airplane'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Airplane'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Airplane'
          description: ''
    patch:
      operationId: airplane_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this airplane.
        required: true
      tags:
      - airplane
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAirplane'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAirplane'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAirplane'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Airplane'
          description: ''
    delete:
      operationId: airplane_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this airplane.
        required: true
      tags:
      - airplane
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /airport/:
    get:
      operationId: airport_list
      tags:
      - airport
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AirportList'
          description: ''
    post:
      operationId: airport_create
      tags:
      - airport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Airport'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Airport'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Airport'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Airport'
          description: ''
  /airport/{id}/:
    get:
      operationId: airport_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this airport.
        required: true
      tags:
      - airport
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AirportDetail'
          description: ''
    put:
      operationId: airport_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this airport.
        required: true
      tags:
      - airport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Airport'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Airport'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Airport'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Airport'
          description: ''
    patch:
      operationId: airport_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this airport.
        required: true
      tags:
      - airport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAirport'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAirport'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAirport'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Airport'
          description: ''
    delete:
      operationId: airport_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this airport.
        required: true
      tags:
      - airport
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /city/:
    get:
      operationId: city_list
      tags:
      - city
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CityWithSlug'
          description: ''
    post:
      operationId: city_create
      tags:
      - city
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/City'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/City'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/City'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/City'
          description: ''
  /city/{id}/:
    get:
      operationId: city_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this city.
        required: true
      tags:
      - city
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CityWithSlug'
          description: ''
    put:
      operationId: city_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this city.
        required: true
      tags:
      - city
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/City'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/City'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/City'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/City'
          description: ''
    patch:
      operationId: city_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this city.
        required: true
      tags:
      - city
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCity'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCity'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCity'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/City'
          description: ''
    delete:
      operationId: city_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this city.
        required: true
      tags:
      - city
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /country/:
    get:
      operationId: country_list
      tags:
      - country
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Country'
          description: ''
    post:
      operationId: country_create
      tags:
      - country
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Country'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Country'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Country'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
          description: ''
  /country/{id}/:
    get:
      operationId: country_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this country.
        required: true
      tags:
      - country
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
          description: ''
    put:
      operationId: country_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this country.
        required: true
      tags:
      - country
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Country'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Country'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Country'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
          description: ''
    patch:
      operationId: country_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this country.
        required: true
      tags:
      - country
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCountry'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCountry'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCountry'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
          description: ''
    delete:
      operationId: country_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this country.
        required: true
      tags:
      - country
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /crew/:
    get:
      operationId: crew_list
      tags:
      - crew
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Crew'
          description: ''
    post:
      operationId: crew_create
      tags:
      - crew
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Crew'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Crew'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Crew'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Crew'
          description: ''
  /crew/{id}/:
    get:
      operationId: crew_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this crew.
        required: true
      tags:
      - crew
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrewDetail'
          description: ''
    put:
      operationId: crew_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this crew.
        required: true
      tags:
      - crew
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Crew'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Crew'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Crew'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Crew'
          description: ''
    patch:
      operationId: crew_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this crew.
        required: true
      tags:
      - crew
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCrew'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCrew'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCrew'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Crew'
          description: ''
    delete:
      operationId: crew_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this crew.
        required: true
      tags:
      - crew
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /flight/:
    get:
      operationId: flight_list
      tags:
      - flight
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FlightList'
          description: ''
    post:
      operationId: flight_create
      tags:
      - flight
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Flight'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Flight'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Flight'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flight'
          description: ''
  /flight/{id}/:
    get:
      operationId: flight_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this flight.
        required: true
      tags:
      - flight
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlightDetail'
          description: ''
    put:
      operationId: flight_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this flight.
        required: true
      tags:
      - flight
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Flight'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Flight'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Flight'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flight'
          description: ''
    patch:
      operationId: flight_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this flight.
        required: true
      tags:
      - flight
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFlight'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFlight'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFlight'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flight'
          description: ''
    delete:
      operationId: flight_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this flight.
        required: true
      tags:
      - flight
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /flight/{id}/tickets/:
    get:
      operationId: flight_tickets_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this flight.
        required: true
      tags:
      - flight
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flight'
          description: ''
  /order/:
    get:
      operationId: order_list
      tags:
      - order
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderUser'
          description: ''
    post:
      operationId: order_create
      tags:
      - order
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderUser'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderUser'
          description: ''
  /order/{id}/:
    get:
      operationId: order_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - order
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDetail'
          description: ''
    delete:
      operationId: order_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - order
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /route/:
    get:
      operationId: route_list
      tags:
      - route
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RouteWithSlug'
          description: ''
    post:
      operationId: route_create
      tags:
      - route
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Route'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Route'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Route'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
          description: ''
  /route/{id}/:
    get:
      operationId: route_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this route.
        required: true
      tags:
      - route
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteWithSlug'
          description: ''
    put:
      operationId: route_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this route.
        required: true
      tags:
      - route
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Route'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Route'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Route'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
          description: ''
    patch:
      operationId: route_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this route.
        required: true
      tags:
      - route
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRoute'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRoute'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRoute'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
          description: ''
    delete:
      operationId: route_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this route.
        required: true
      tags:
      - route
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /ticket/:
    get:
      operationId: ticket_list
      tags:
      - ticket
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ticket'
          description: ''
    post:
      operationId: ticket_create
      tags:
      - ticket
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ticket'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Ticket'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Ticket'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
          description: ''
  /ticket/{id}/:
    get:
      operationId: ticket_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - ticket
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketDetail'
          description: ''
    put:
      operationId: ticket_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - ticket
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ticket'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Ticket'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Ticket'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
          description: ''
    patch:
      operationId: ticket_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - ticket
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTicket'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTicket'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTicket'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
          description: ''
    delete:
      operationId: ticket_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - ticket
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    Airplane:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        rows:
          type: integer
          maximum: 9223372036854775807
          minimum: 1
          format: int64
        seats_per_row:
          type: integer
          maximum: 9223372036854775807
          minimum: 1
          format: int64
        airplane_type:
          type: integer
      required:
      - airplane_type
      - id
      - name
      - rows
      - seats_per_row
    AirplaneList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        capacity:
          type: string
          readOnly: true
        airplane_type:
          type: string
          readOnly: true
        airplane_type_url:
          type: string
          format: uri
          readOnly: true
      required:
      - airplane_type
      - airplane_type_url
      - capacity
      - id
      - name
    AirplaneNested:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        capacity:
          type: string
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
      required:
      - capacity
      - id
      - name
      - url
    AirplaneRetrieve:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        airplane_type:
          type: string
          readOnly: true
        airplane_type_url:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          maxLength: 100
        rows:
          type: integer
          maximum: 9223372036854775807
          minimum: 1
          format: int64
        seats_per_row:
          type: integer
          maximum: 9223372036854775807
          minimum: 1
          format: int64
      required:
      - airplane_type
      - airplane_type_url
      - id
      - name
      - rows
      - seats_per_row
    AirplaneType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
      required:
      - id
      - name
    AirplaneTypeDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        airplanes:
          type: array
          items:
            $ref: '#/components/schemas/AirplaneNested'
          readOnly: true
        name:
          type: string
          maxLength: 100
      required:
      - airplanes
      - id
      - name
    Airport:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        closest_big_city:
          type: integer
          nullable: true
      required:
      - id
      - name
    AirportDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        sources:
          type: array
          items:
            $ref: '#/components/schemas/RouteWithSlug'
          readOnly: true
        destinations:
          type: array
          items:
            $ref: '#/components/schemas/RouteWithSlug'
          readOnly: true
        name:
          type: string
          maxLength: 100
        closest_big_city:
          type: integer
          nullable: true
      required:
      - destinations
      - id
      - name
      - sources
    AirportList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        closest_big_city:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 100
      required:
      - closest_big_city
      - id
      - name
    City:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 250
        country:
          type: integer
      required:
      - country
      - id
      - name
    CityWithSlug:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        country:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 250
      required:
      - country
      - id
      - name
    Country:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 250
      required:
      - id
      - name
    Crew:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
      required:
      - first_name
      - id
      - last_name
    CrewDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        flights:
          type: array
          items:
            $ref: '#/components/schemas/FlightNested'
          readOnly: true
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
      required:
      - first_name
      - flights
      - id
      - last_name
    CrewNested:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
      required:
      - first_name
      - last_name
      - url
    Flight:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        departure_time:
          type: string
          format: date-time
        arrival_time:
          type: string
          format: date-time
        route:
          type: integer
        airplane:
          type: integer
        crew:
          type: array
          items:
            type: integer
      required:
      - airplane
      - arrival_time
      - crew
      - departure_time
      - id
      - route
    FlightDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        crew:
          type: array
          items:
            $ref: '#/components/schemas/CrewNested'
          readOnly: true
        route:
          allOf:
          - $ref: '#/components/schemas/RouteNested'
          readOnly: true
        airplane:
          allOf:
          - $ref: '#/components/schemas/AirplaneNested'
          readOnly: true
        departure_time:
          type: string
          format: date-time
        arrival_time:
          type: string
          format: date-time
      required:
      - airplane
      - arrival_time
      - crew
      - departure_time
      - id
      - route
    FlightList:
      type: object
      properties:
        departure_time:
          type: string
          format: date-time
        arrival_time:
          type: string
          format: date-time
        route:
          allOf:
          - $ref: '#/components/schemas/RouteNested'
          readOnly: true
      required:
      - arrival_time
      - departure_time
      - route
    FlightNested:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        route:
          allOf:
          - $ref: '#/components/schemas/RouteNested'
          readOnly: true
      required:
      - route
      - url
    OrderDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        tickets:
          type: array
          items:
            $ref: '#/components/schemas/TicketDetail'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - tickets
    OrderUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
    PatchedAirplane:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        rows:
          type: integer
          maximum: 9223372036854775807
          minimum: 1
          format: int64
        seats_per_row:
          type: integer
          maximum: 9223372036854775807
          minimum: 1
          format: int64
        airplane_type:
          type: integer
    PatchedAirplaneType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
    PatchedAirport:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        closest_big_city:
          type: integer
          nullable: true
    PatchedCity:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 250
        country:
          type: integer
    PatchedCountry:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 250
    PatchedCrew:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
    PatchedFlight:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        departure_time:
          type: string
          format: date-time
        arrival_time:
          type: string
          format: date-time
        route:
          type: integer
        airplane:
          type: integer
        crew:
          type: array
          items:
            type: integer
    PatchedRoute:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        distance:
          type: integer
          maximum: 9223372036854775807
          minimum: 1
          format: int64
        source:
          type: integer
        destination:
          type: integer
    PatchedTicket:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        row:
          type: integer
          maximum: 9223372036854775807
          minimum: 1
          format: int64
        seat:
          type: integer
          maximum: 9223372036854775807
          minimum: 1
          format: int64
        order:
          type: integer
          nullable: true
        flight:
          type: integer
          nullable: true
    PatchedUser:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        password:
          type: string
          writeOnly: true
          maxLength: 128
          minLength: 5
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
    Route:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        distance:
          type: integer
          maximum: 9223372036854775807
          minimum: 1
          format: int64
        source:
          type: integer
        destination:
          type: integer
      required:
      - destination
      - distance
      - id
      - source
    RouteNested:
      type: object
      properties:
        source:
          type: string
          readOnly: true
        destination:
          type: string
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
      required:
      - destination
      - source
      - url
    RouteWithSlug:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        source:
          type: string
          readOnly: true
        destination:
          type: string
          readOnly: true
        distance:
          type: integer
          maximum: 9223372036854775807
          minimum: 1
          format: int64
      required:
      - destination
      - distance
      - id
      - source
    Ticket:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        row:
          type: integer
          maximum: 9223372036854775807
          minimum: 1
          format: int64
        seat:
          type: integer
          maximum: 9223372036854775807
          minimum: 1
          format: int64
        order:
          type: integer
          nullable: true
        flight:
          type: integer
          nullable: true
      required:
      - flight
      - id
      - order
      - row
      - seat
    TicketDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        flight:
          allOf:
          - $ref: '#/components/schemas/FlightNested'
          readOnly: true
        row:
          type: integer
          maximum: 9223372036854775807
          minimum: 1
          format: int64
        seat:
          type: integer
          maximum: 9223372036854775807
          minimum: 1
          format: int64
        order:
          type: integer
          nullable: true
      required:
      - flight
      - id
      - order
      - row
      - seat
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
    User:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        password:
          type: string
          writeOnly: true
          maxLength: 128
          minLength: 5
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - email
      - password
      - username
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
